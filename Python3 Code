# import the necessary packages
import imutils
import cv2
import numpy as np 


image = cv2.imread("image1.jpeg") #path of image
hsv = cv2.cvtColor(image,cv2.COLOR_BGR2HSV)

#In HSV mode ,masking the red and green contour
lower = np.array([61,150,150], dtype=np.uint8)
upper = np.array([200,255,255], dtype=np.uint8)

#Masking

mask = cv2.inRange(hsv, lower, upper)
output = cv2.bitwise_and(image, image , mask = mask)

# show the images
cv2.imshow("images",output)

 
# Convert it to grayscale
# and threshold it

gray = cv2.cvtColor(output, cv2.COLOR_BGR2GRAY)
cv2.imshow("images",output)

# Find Contours
cnts = cv2.findContours(gray.copy(), cv2.RETR_EXTERNAL,
	cv2.CHAIN_APPROX_SIMPLE)
cnts = cnts[0] if imutils.is_cv2() else cnts[1]


# Loop over the contours
for c in cnts:
	# compute the center of the contour
	M = cv2.moments(c)
	cX = int(M["m10"] / M["m00"])
	cY = int(M["m01"] / M["m00"])
 
	# draw the contour and center of the shape on the image
	cv2.drawContours(image, [c], -1, (0, 255, 0), 2)
	cv2.circle(image, (cX, cY), 7, (255, 255, 255), -1)
	cv2.putText(image, "center", (cX - 20, cY - 20),
		cv2.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 2)
 
	# show the image

cv2.imshow("Image", image)
cv2.waitKey(0)	
